<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="CustagingReport">
    <select id="fetchCustagingReport" parameterClass="com.defiance.ideal.reports.dto.CustagingReportFilterDTO" resultClass="com.defiance.ideal.reports.dto.CustagingReportDataDTO">
<!--        SELECT cr.id as custagingId,
        cr.customer_code,
        cr.invoice_number,
        DATE_FORMAT(cr.invoice_date, '%d-%m-%Y') AS invoice_date,
        DATEDIFF(cr.credit_due_date, cr.invoice_date) AS credit_period,
        DATE_FORMAT(cr.credit_due_date, '%d-%m-%Y') AS credit_due_date,
        cr.invoicing_currency,
        cr.amount_in_IC,
        cr.local_currency AS local_currency_value,
        cr.amount_in_LC,
        cr.amount_collected,
        cr.TDS,
        cr.other_charges,
        DATE_FORMAT(cr.date_of_report, '%d-%M-%Y') AS date_of_report,
        cr.project_code,
        DATE_FORMAT(cr.collection_date, '%d-%M-%Y') AS collection_date,
        cr.past_days_due AS days_past_due,
        cr.balance_in_LC,
        cr.rbu AS rbu,
         css.name AS subRBU,
        cr.balance_in_IC,
        cr.Balance_in_INR,
        c.customer_name AS cust_name,
        c.customer_contact_phone,
        c.business_leader_id,
        cr.invoice_date_submission_customer,
        cr.expected_collection_date,
        c.bdm_id,
        ic.*,
        le.id,
        le.legal_entity_code AS legal_entity,
        prj.*,
        concat(emp1.first_name,' ', emp1.last_name) AS business_leader,
        concat(emp2.first_name,' ', emp2.last_name) AS bdm,
        cur.currency_code AS local_currency
        FROM
        custagingreport as cr
        INNER JOIN customers as c on cr.customer_code = c.customer_code
        LEFT JOIN company_structures as css on c.sub_rbu = css.id
        LEFT JOIN invoice_configurations as ic on c.legal_entity_code = ic.id
        LEFT JOIN legal_entities as le on le.id = ic.legal_entity_id
        LEFT JOIN projects as prj ON (prj.project_code = cr.project_code AND cr.project_code != '')
        LEFT JOIN employees as emp1 on emp1.id = c.business_leader_id
        LEFT JOIN employees as emp2 on emp2.id = c.bdm_id
        LEFT JOIN currencies as cur on cur.id = prj.currency_id
        WHERE cr.amount_collected <![CDATA[ <= ]]> 0-->
        
       (SELECT cr.id as custagingId,
        cr.customer_code,
        cr.invoice_number,
        DATE_FORMAT(cr.invoice_date, '%d-%m-%Y') AS invoice_date,
        DATEDIFF(cr.credit_due_date, cr.invoice_date) AS credit_period,
        DATE_FORMAT(cr.credit_due_date, '%d-%m-%Y') AS credit_due_date,
        cr.invoicing_currency,
        cr.amount_in_IC,
        cr.local_currency AS local_currency_value,
        cr.amount_in_LC,
        cr.amount_collected,
        cr.TDS,
        cr.other_charges,
        DATE_FORMAT(cr.date_of_report, '%d-%m-%Y') AS date_of_report,
        cr.project_code,
        DATE_FORMAT(cr.collection_date, '%d-%M-%Y') AS collection_date,
        cr.past_days_due AS days_past_due,
        cr.balance_in_LC,
        cr.rbu AS rbu,
        css.name AS subRBU,
        cr.balance_in_IC,
        cr.Balance_in_INR,
        c.customer_name AS cust_name,
        c.business_leader_id,
        c.bdm_id,
        ic.*,
        le.id,
        le.legal_entity_code AS legal_entity,
        prj.*,
        case 
        when prj.project_sbu='5' then concat('Ramachandra Char',' ','Venkatesha Prasan')
        when prj.project_sbu='2' then concat('Faiz Ahmad',' ','MD')
        end AS business_leader,
        concat(emp2.first_name,' ', emp2.last_name) AS bdm,
        cur.currency_code AS local_currency,
        DATE_FORMAT(crh.invoice_date_submission_customer, '%d-%m-%Y') AS invoice_date_submission_customer,
        DATE_FORMAT(crh.expected_collection_date, '%d-%m-%Y') AS expected_collection_date
        FROM
        custagingreport as cr
        INNER JOIN projects as prj ON (prj.project_code = cr.project_code AND cr.project_code != '' )
        LEFT JOIN customers as c on cr.customer_code = c.customer_code
        LEFT JOIN  ($dynamic_query$) as crh on (crh.custaging_invoice_number = cr.invoice_number)
        LEFT JOIN company_structures as css on c.sub_rbu = css.id
        LEFT JOIN invoice_configurations as ic on c.legal_entity_code = ic.id
        LEFT JOIN legal_entities as le on le.id = ic.legal_entity_id
        LEFT JOIN employees as emp2 on (emp2.id = prj.sales_person)
        LEFT JOIN currencies as cur on cur.id = prj.currency_id
        WHERE cr.amount_collected   <![CDATA[ <= ]]> 0 
        <dynamic>
            <isNotEmpty prepend="AND" property="legal_entity">
              le.id = #legal_entity#
            </isNotEmpty>
            <isNotEmpty property="business_leader_id">
                <isEqual prepend="AND" property="SBU" compareValue="2">
                    prj.project_sbu = #SBU#
                </isEqual>
                <isEqual prepend="AND" property="SBU" compareValue="5">
                    prj.project_sbu = #SBU#
                </isEqual>
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="bdm_id">
              prj.sales_person = #bdm_id#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="customer_id">
              c.id = #customer_id#
            </isNotEmpty>
            
            <isNotEmpty prepend="AND" property="reportDate">
<!--              cr.date_of_report = STR_TO_DATE(#reportDate#,'%d-%m-%Y')-->
              cr.date_of_report = #reportDate#
            </isNotEmpty>
            <isNotEmpty property="overDue_aging">
                <isEqual prepend="AND" property="operators" compareValue="1">
                    cr.past_days_due <![CDATA[=]]> #overDue_aging#
                </isEqual>
                <isEqual prepend="AND" property="operators" compareValue="2">
                    cr.past_days_due <![CDATA[>]]> #overDue_aging#
                </isEqual>
                <isEqual prepend="AND" property="operators" compareValue="3">
                    cr.past_days_due <![CDATA[>=]]> #overDue_aging#
                </isEqual>
                <isEqual prepend="AND" property="operators" compareValue="4">
                    cr.past_days_due <![CDATA[<]]> #overDue_aging#
                </isEqual>
                <isEqual prepend="AND" property="operators" compareValue="5">
                    cr.past_days_due <![CDATA[<=]]> #overDue_aging# 
                </isEqual>
            </isNotEmpty>
        </dynamic> 
              ) UNION (
               
               SELECT cr.id as custagingId,
        cr.customer_code,
        cr.invoice_number,
        DATE_FORMAT(cr.invoice_date, '%d-%m-%Y') AS invoice_date,
        DATEDIFF(cr.credit_due_date, cr.invoice_date) AS credit_period,
        DATE_FORMAT(cr.credit_due_date, '%d-%m-%Y') AS credit_due_date,
        cr.invoicing_currency,
        cr.amount_in_IC,
        cr.local_currency AS local_currency_value,
        cr.amount_in_LC,
        cr.amount_collected,
        cr.TDS,
        cr.other_charges,
        DATE_FORMAT(cr.date_of_report, '%d-%m-%Y') AS date_of_report,
        cr.project_code,
        DATE_FORMAT(cr.collection_date, '%d-%M-%Y') AS collection_date,
        cr.past_days_due AS days_past_due,
        cr.balance_in_LC,
        cr.rbu AS rbu,
        css.name AS subRBU,
        cr.balance_in_IC,
        cr.Balance_in_INR,
        c.customer_name AS cust_name,
        c.business_leader_id,
        c.bdm_id,
        ic.*,
        le.id,
        le.legal_entity_code AS legal_entity,
        prj.*,
        case 
        when prj.project_sbu='5' then concat('Ramachandra Char',' ','Venkatesha Prasan')
        when prj.project_sbu='2' then concat('Faiz Ahmad',' ','MD')
        end AS business_leader,
        concat(emp2.first_name,' ', emp2.last_name) AS bdm,
        cur.currency_code AS local_currency,
        DATE_FORMAT(crh.invoice_date_submission_customer, '%d-%m-%Y') AS invoice_date_submission_customer,
        DATE_FORMAT(crh.expected_collection_date, '%d-%m-%Y') AS expected_collection_date
        FROM
        custagingreport_backup as cr
        INNER JOIN projects as prj ON (prj.project_code = cr.project_code AND cr.project_code != '' )
        LEFT JOIN customers as c on cr.customer_code = c.customer_code
        LEFT JOIN  ($dynamic_query$) as crh on (crh.custaging_invoice_number = cr.invoice_number)
        LEFT JOIN company_structures as css on c.sub_rbu = css.id
        LEFT JOIN invoice_configurations as ic on c.legal_entity_code = ic.id
        LEFT JOIN legal_entities as le on le.id = ic.legal_entity_id
        LEFT JOIN employees as emp2 on (emp2.id = prj.sales_person)
        LEFT JOIN currencies as cur on cur.id = prj.currency_id
        WHERE cr.amount_collected   <![CDATA[ <= ]]> 0 
        <dynamic>
            <isNotEmpty prepend="AND" property="legal_entity">
              le.id = #legal_entity#
            </isNotEmpty>
            <isNotEmpty property="business_leader_id">
                <isEqual prepend="AND" property="SBU" compareValue="2">
                    prj.project_sbu = #SBU#
                </isEqual>
                <isEqual prepend="AND" property="SBU" compareValue="5">
                    prj.project_sbu = #SBU#
                </isEqual>
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="bdm_id">
              prj.sales_person = #bdm_id#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="customer_id">
              c.id = #customer_id#
            </isNotEmpty>
            
            <isNotEmpty prepend="AND" property="reportDate">
<!--              cr.date_of_report = STR_TO_DATE(#reportDate#,'%d-%m-%Y')-->
              cr.date_of_report = #reportDate#
            </isNotEmpty>
            <isNotEmpty property="overDue_aging">
                <isEqual prepend="AND" property="operators" compareValue="1">
                    cr.past_days_due <![CDATA[=]]> #overDue_aging#
                </isEqual>
                <isEqual prepend="AND" property="operators" compareValue="2">
                    cr.past_days_due <![CDATA[>]]> #overDue_aging#
                </isEqual>
                <isEqual prepend="AND" property="operators" compareValue="3">
                    cr.past_days_due <![CDATA[>=]]> #overDue_aging#
                </isEqual>
                <isEqual prepend="AND" property="operators" compareValue="4">
                    cr.past_days_due <![CDATA[<]]> #overDue_aging#
                </isEqual>
                <isEqual prepend="AND" property="operators" compareValue="5">
                    cr.past_days_due <![CDATA[<=]]> #overDue_aging# 
                </isEqual>
            </isNotEmpty>
        </dynamic>
          )
    </select>
    
    
    
    <select id="fetchLegalEntity" parameterClass="com.defiance.ideal.reports.dto.CustagingReportFilterDTO" resultClass="com.defiance.ideal.reports.dto.CustagingReportDataDTO">
        SELECT id as "legal_entity_id",
        legal_entity_code as "legal_entity_code"
        FROM legal_entities
    </select>

    <select id="fetchBdmName" parameterClass="com.defiance.ideal.reports.dto.CustagingReportFilterDTO" resultClass="com.defiance.ideal.reports.dto.CustagingReportDataDTO">
<!--         SELECT DISTINCT emp.id AS bdm_id,
         CONCAT_WS(" ",emp.first_name, emp.last_name) AS bdm_name
         FROM employees AS emp
         INNER JOIN customers AS cust ON ( cust.bdm_id = emp.id AND cust.customer_code != '' )
         WHERE
            emp.employment_status NOT IN ('r','t','b','q','o')
        <dynamic>
            <isNotEmpty prepend="AND" property="business_leader_id">
                        cust.business_leader_id = #business_leader_id#
            </isNotEmpty>
        </dynamic>
         ORDER BY emp.first_name,last_name ASC-->
<!--         SELECT DISTINCT emp.id AS bdm_id,emp.structure_name AS SBU,
         CONCAT_WS(" ",emp.first_name, emp.last_name) AS bdm_name
         FROM employees AS emp
         INNER JOIN projects AS project ON(project.sales_person= emp.id)
         WHERE
            emp.employment_status NOT IN ('r','t','b','q','o')-->
        SELECT DISTINCT emp.id AS bdm_id,emp.structure_name AS SBU,
        CONCAT_WS(" ",emp.first_name, emp.last_name) AS bdm_name
        FROM employees AS emp
        LEFT JOIN projects AS project ON(project.sales_person= emp.id) 
        WHERE
            emp.employment_status NOT IN ('r','t','b','q','o') AND project.project_status NOT IN('c')
        <dynamic>             
            <isEqual prepend="AND" property="SBU" compareValue="2">
                project.project_sbu = #SBU#
            </isEqual>
            <isEqual prepend="AND" property="SBU" compareValue="5">
                project.project_sbu = #SBU#
            </isEqual>
        </dynamic>
         ORDER BY emp.first_name,last_name ASC       
        
    </select>
    <select id="fetchBdmId" parameterClass="com.defiance.ideal.reports.dto.CustagingReportFilterDTO" resultClass="com.defiance.ideal.reports.dto.CustagingReportDataDTO">
    SELECT
    pt.configuration_value as bdm_name
    FROM configuration_values AS pt
    WHERE
        pt.configuration_key = 'bdm_id'
    </select>
    <select id="fetchBdmNameList" parameterClass="com.defiance.ideal.reports.dto.CustagingReportFilterDTO" resultClass="com.defiance.ideal.reports.dto.CustagingReportDataDTO">

        SELECT DISTINCT emp.id AS bdm_id,emp.structure_name AS SBU,
        CONCAT_WS(" ",emp.first_name, emp.last_name) AS bdm_name
        FROM employees AS emp
        LEFT JOIN projects AS project ON(project.sales_person= emp.id)
        INNER JOIN (select re.project_code from ( (select  crb.project_code from custagingreport as crb  where crb.date_of_report  = #reportDate# and crb.project_code != '' AND  crb.project_code is not null      group by crb.project_code )
        UNION
       (select c.project_code from custagingreport_backup as c where  c.date_of_report = #reportDate# and  c.project_code != '' AND c.project_code is not null group by c.project_code)) as re) as custreport on(custreport.project_code=project.project_code)
        WHERE
        emp.employment_status NOT IN ('r','t','b','q','o')
        AND emp.id IN($bdm_Name_List$)
         <dynamic>             
            <isEqual prepend="AND" property="SBU" compareValue="2">
                project.project_sbu = #SBU#
            </isEqual>
            <isEqual prepend="AND" property="SBU" compareValue="5">
                project.project_sbu = #SBU#
            </isEqual>
        </dynamic>
        order by  emp.first_name,emp.last_name     
    </select>
    <select id="fetchBusinessLeader" parameterClass="com.defiance.ideal.reports.dto.CustagingReportFilterDTO" resultClass="com.defiance.ideal.reports.dto.CustagingReportDataDTO">
<!--       SELECT DISTINCT emp.id AS business_leader_id,
       CONCAT_WS(" ",emp.first_name, emp.last_name) AS business_leader_name
       FROM employees AS emp
       INNER JOIN customers as cust ON (cust.business_leader_id = emp.id AND cust.customer_code != '' )
       WHERE 
            emp.employment_status NOT IN ('r','t','b','q') 
       ORDER BY emp.first_name,last_name ASC-->

        SELECT DISTINCT emp.id AS business_leader_id,emp.structure_name AS SBU,
        CONCAT_WS(" ",emp.first_name, emp.last_name) AS business_leader_name
        FROM employees AS emp
        INNER JOIN configuration_values AS child ON (child.configuration_value=emp.id and child.configuration_key='business_leader_id')
        WHERE
            emp.employment_status NOT IN ('r','t','b','q','o') 
        ORDER BY emp.first_name,last_name ASC 
    </select>
    <select id="fetchCustomerName" parameterClass="com.defiance.ideal.reports.dto.CustagingReportFilterDTO" resultClass="com.defiance.ideal.reports.dto.CustagingReportDataDTO">
        SELECT cust.id as "customer_id",
        CONCAT(cust.customer_name,' - ',cust.customer_code) as "customer_name"
        FROM 
        (select re.customer_code,re.project_code from ( (select crb.customer_code,crb.project_code from custagingreport as crb where crb.date_of_report = #reportDate# and crb.project_code != '' AND crb.project_code is not null group by  crb.project_code ) 
        UNION 
        (select c.customer_code,c.project_code from custagingreport_backup as c where c.date_of_report = #reportDate# and c.project_code != '' AND c.project_code is not null group by c.project_code)) as re) as custreport
        INNER JOIN projects prj ON (custreport.project_code=prj.project_code) 
        INNER JOIN customers as cust on (cust.customer_code=custreport.customer_code) 
        WHERE cust.customer_code != ''
        <dynamic>
            <isNotEmpty property="business_leader_id">
              <isEqual prepend="AND" property="SBU" compareValue="2">
                    prj.project_sbu = #SBU#
                </isEqual>
                <isEqual prepend="AND" property="SBU" compareValue="5">
                    prj.project_sbu = #SBU#
                </isEqual>
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="bdm_id">
              prj.sales_person=#bdm_id#
            </isNotEmpty>
        </dynamic>
        group by cust.id
        order by  cust.customer_name
    </select>
    
    <select id="fetchExchangeRate" resultClass="com.defiance.ideal.reports.dto.CustagingReportDataDTO">
        SELECT DISTINCT currency_code, exchange_rate FROM exchange_rate WHERE 1=1 ORDER BY for_the_year, for_the_month DESC
    </select>
    
    <update id="updateInvoiceDates" parameterClass="com.defiance.ideal.reports.dto.CustagingReportFilterDTO">
        UPDATE custagingreport SET
        invoice_date_submission_customer=#invoiceDateSubmitCustomerForUpdate#,
        expected_collection_date=#expectedCollectionDateForUpdate#
        WHERE date_of_report = #submition_date# AND invoice_number = #submition_invoice_number#;
    </update>
    
     <insert id="updateInvoiceDatesForHistory" parameterClass="com.defiance.ideal.reports.dto.CustagingReportFilterDTO">
        INSERT INTO custaging_report_histories(custaging_invoice_number,invoice_date_submission_customer,expected_collection_date,emp_id,custaging_invoice_date,created_date)
        VALUES(#submition_invoice_number#,#invoiceDateSubmitCustomerForUpdate#,#expectedCollectionDateForUpdate#,#empId#,#submition_date#,#historyUpdatedDate#)
    </insert>
    
    <select id="fetchReportDates" resultClass="com.defiance.ideal.reports.dto.CustagingReportDataDTO" parameterClass="com.defiance.ideal.reports.dto.CustagingReportFilterDTO">
       (SELECT 
        DATE_FORMAT(cr.date_of_report, '%d-%m-%Y') AS date_of_report
        FROM
        custagingreport as cr
        INNER JOIN projects as prj ON (prj.project_code = cr.project_code AND cr.project_code != '' )
        LEFT JOIN employees as emp on (emp.id = prj.sales_person)
<!--          WHERE 1=1 
        <isNotEmpty prepend="AND" property="bdm_id">
              prj.sales_person=#bdm_id#
            </isNotEmpty>-->
        group by cr.date_of_report)
		UNION
	(SELECT 
        DATE_FORMAT(crb.date_of_report, '%d-%m-%Y') AS date_of_report
        FROM
        custagingreport_backup as crb
        INNER JOIN projects as prj ON (prj.project_code = crb.project_code AND crb.project_code != '' )
        LEFT JOIN employees as emp on (emp.id = prj.sales_person)
<!--          WHERE 1=1   <isNotEmpty prepend="AND" property="bdm_id">
                        prj.sales_person=#bdm_id#
                       </isNotEmpty>-->
        group by crb.date_of_report)
    </select>
    <select id="checkInExistingDates" resultClass="Integer" parameterClass="com.defiance.ideal.reports.dto.CustagingReportFilterDTO">
        SELECT count(*) as count FROM custaging_report_histories WHERE invoice_date_submission_customer = #invoiceDateSubmitCustomerForUpdate# AND
        expected_collection_date = #expectedCollectionDateForUpdate# AND custaging_invoice_number = #submition_invoice_number# AND custaging_invoice_date = #submition_date#;
    </select>
    <select id="maxDateOfreport" resultClass="String">
     SELECT MAX(date_of_report) as date_of_report  FROM custagingreport;
    </select>
    
</sqlMap>