<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="EmployeeMap">
    <select id="getDetails" parameterClass="com.defiance.ideal.reports.dto.AssociateDataDTO" resultClass="com.defiance.ideal.reports.dto.EmployeeBasicReportDTO">
        SELECT 
        emp.employee_number AS empNumber, 
        CONCAT( emp.first_name," ", emp.last_name ) AS empName,          
        DATE_FORMAT(emp.joined_date, '%d-%m-%Y') AS joinDate,
        FLOOR((TIMESTAMPDIFF(MONTH, emp.joined_date, NOW())/(12))) AS expYears,
        FLOOR((TIMESTAMPDIFF(MONTH, emp.joined_date, NOW()))%12) AS expMonths,        
        org.name AS orgUnit,
        cmp.name AS sbu,
        subs.name AS subSbu,
        subpr.name AS subPractice,
        mng.employee_number AS rmId,
        CONCAT( mng.first_name," ", mng.last_name ) AS rmName,desg.designation AS designation,
        CASE
        WHEN ojf.source_of_hire IN ('d','j') THEN 'Direct'
        WHEN ojf.source_of_hire IN ('r') THEN 'Referral'
        WHEN ojf.source_of_hire IN ('v') THEN 'Vendor'
        END AS sourceOfHire,       
        stat.configuration_value AS STATUS,
        bill.configuration_value AS billable,
        emp.work_email_address AS email, band.name AS bandName,       
        CASE emp.gender
        WHEN "m" THEN "Male"
        WHEN "f" THEN "Female"
        END AS gender,
        cs.country AS currentcountry ,
        cl.address_line1 as currentLocation,
        F_Current_EmpLocation(emp.id,curdate()) AS currentWrkLocation,
        CASE
        WHEN dee.submit_status = 2 AND dee.deleted = 'N'  THEN 'Exit Initiated'
        WHEN dee.submit_status > 3 AND dee.submit_status != 4 AND dee.deleted = 'N' AND emp.employment_status NOT IN ('r','b','q','t','o')  THEN 'Under Notice Period'
        WHEN  emp.employment_status IN ('r','b','q','t','o')  THEN 'Resigned'
        ELSE "--" 
        END AS exitStatus,
        CASE WHEN emp.contract_startdate IS NULL OR emp.contract_startdate ='0000-00-00'
        THEN '--'
        ELSE emp.contract_startdate
        END AS contractStartDate,
        
        CASE WHEN emp.contract_enddate IS NULL OR emp.contract_enddate ='0000-00-00'
        THEN '--'
        ELSE emp.contract_enddate
        END AS contractExpiryDate,
        FLOOR(((SUM( pr.exp_month ))+(TIMESTAMPDIFF(MONTH, emp.joined_date, NOW())))%12) AS totalMonthExp,
        CASE
        WHEN 
        ((SUM( pr.exp_month ) )%12)!=0
        THEN 
        FLOOR(SUM( pr.exp_year )+((SUM( pr.exp_month ) )/12)+(TIMESTAMPDIFF(MONTH, emp.joined_date, NOW())/(12)))
        ELSE
        FLOOR(SUM( pr.exp_year)+(TIMESTAMPDIFF(MONTH, emp.joined_date, NOW())/(12)))
        END AS totalYearExp,
        DATE_FORMAT(emp.resigned_date, '%d-%m-%Y') AS resigned,
        CASE WHEN emp.released_date <![CDATA[ < ]]> NOW() THEN DATE_FORMAT(emp.released_date, '%d-%m-%Y') ELSE '' END AS relieved
        FROM employees AS emp        
        LEFT JOIN company_structures cmp ON (emp.structure_name = cmp.id)
        LEFT JOIN company_structures org ON (cmp.parent_id = org.id)
        LEFT JOIN company_structures subs ON (emp.structure_name_subgroup = subs.id)
        LEFT JOIN company_structures subpr ON (emp.structure_name_subpractice = subpr.id)
        LEFT JOIN company_locations AS loc ON (loc.id = emp.current_location_id)
        LEFT JOIN cities AS city ON (city.id = loc.city_id)
        LEFT JOIN countries AS cs ON(cs.id=city.country_id)		
        LEFT JOIN employees AS mng ON (mng.id = emp.manager)        
        LEFT JOIN designations desg ON (desg.id = emp.designation_id)
        LEFT JOIN bands band ON (band.id = emp.band_id)
        LEFT JOIN company_locations AS cl ON (cl.id=emp.current_location_id)             
        LEFT JOIN configuration_values AS bill ON(bill.configuration_key = emp.billable AND bill.parent_id = 52)
        LEFT JOIN configuration_values AS stat ON(stat.configuration_key = emp.employment_status AND stat.parent_id = 286)		  
        LEFT JOIN dtl_online_joining_formalities AS ojf ON (ojf.employee_id = emp.id)
        LEFT JOIN dtl_exit_employee AS dee ON (dee.employee_id = emp.id)
        LEFT JOIN dtl_ojf_pre_employer pr ON (pr.ojf_id=ojf.id)
        WHERE emp.structure_name = cmp.id 
       
        <dynamic prepend="AND">
            <isNotNull property="sbu">
                <isNotEqual property="sbu" compareValue="All">
                    cmp.name = #sbu#
                </isNotEqual>
            </isNotNull>   
        </dynamic> 
        <dynamic prepend="AND">
            <isNotNull property="subSbu">
                <isNotEmpty property="subSbu">
                    <isNotEqual property="subSbu" compareValue="All">
                        subs.id = #subSbu#
                    </isNotEqual>
                </isNotEmpty>
            </isNotNull>   
        </dynamic>        
        <dynamic prepend="AND">
            <isNotNull property="status">
                emp.employment_status in ($status$)
            </isNotNull>
        </dynamic>
        
        <dynamic prepend="AND">
            <isNotNull property="joinedStartDate">
                <isNotEmpty property="joinedStartDate">
                    emp.joined_date between #joinedStartDate# AND #joinedEndDate#
                </isNotEmpty>
            </isNotNull>
        </dynamic>
        
        group by emp.id order by emp.employee_number
        <dynamic>
            <isNotEqual property="end_page" compareValue="0">
                LIMIT #start_page#,#end_page#;
            </isNotEqual>
        </dynamic>
      
    </select>
    <select id="getSubSbu" parameterClass="String" resultClass="com.defiance.ideal.reports.dto.AssociateFilterDTO">
        SELECT id as id,name AS name FROM company_structures c WHERE parent_id IN ($parentId$);
    </select>
    
    <select id="getSbu" parameterClass="String" resultClass="com.defiance.ideal.reports.dto.AssociateFilterDTO">
        SELECT id as id,name AS name FROM company_structures c WHERE parent_id IN (SELECT id FROM company_structures WHERE parent_id =0);
    </select>
    
    <select id="getParent_id" parameterClass="String" resultClass="String">
        SELECT GROUP_CONCAT(id) AS id FROM company_structures c WHERE parent_id IN (SELECT id FROM company_structures WHERE parent_id =0)
    </select>
    
    <select id="fetchAssociateListCount" parameterClass="com.defiance.ideal.reports.dto.AssociateDataDTO" resultClass="java.lang.Integer">
        select count(*) as recordCount from (SELECT  count(*) FROM employees AS emp
        <!--        LEFT JOIN company_structures cmp ON (emp.structure_name = cmp.id)
        LEFT JOIN company_structures subs ON (emp.structure_name_subgroup = subs.id)
        LEFT JOIN company_locations AS loc ON (loc.id = emp.current_location_id)
        LEFT JOIN cities AS city ON (city.id = loc.city_id)
        LEFT JOIN employees AS mng ON (mng.id = emp.manager)
        LEFT JOIN employee_skills skills ON (skills.id = emp.id)
        LEFT JOIN designations desg ON (desg.id = emp.designation_id)
        LEFT JOIN bands band ON (band.id = emp.band_id)
        LEFT JOIN countries tranCtry ON(tranCtry.id=emp.transferred_country_id)
        LEFT JOIN cities transCity ON(transCity.id=emp.transferred_city_id)
        LEFT JOIN employee_info_histories info ON (emp.id = info.employee_id AND info.id = (select MAX(id) from employee_info_histories where employee_id = emp.id AND field_changed = 'employment_status' AND (changed_from = 'e' || changed_to = 'e') AND changed_to NOT IN ('r','b','q','t','o')))
        LEFT JOIN dtl_employee_skills dempSkl ON(dempSkl.employee_id=emp.id)
        LEFT JOIN dtl_skills skl ON(skl.skill_id=dempSkl.skill_id)
        LEFT JOIN dtl_streams str ON(str.id=skl.stream_id)
        LEFT JOIN employee_info_histories as eih ON (eih.employee_id = emp.id AND eih.id = (select MAX(id) from employee_info_histories where employee_id = emp.id AND field_changed = 'employee_structure' AND changed_to = '29' AND status = 1))
        LEFT JOIN employees as parentmngr ON (parentmngr.id = eih.prev_manager)
        LEFT JOIN company_structures as parentSUBSBU ON (parentSUBSBU.id = eih.changed_from)
        LEFT JOIN company_structures as parentSBU ON (parentSBU.id = parentSUBSBU.parent_id)
        LEFT JOIN dtl_exit_employee as dee ON (dee.employee_id = emp.id)-->
        LEFT JOIN company_structures cmp ON (emp.structure_name = cmp.id)
        LEFT JOIN company_structures subs ON (emp.structure_name_subgroup = subs.id)
        LEFT JOIN company_locations AS loc ON (loc.id = emp.current_location_id)
        LEFT JOIN cities AS city ON (city.id = loc.city_id)
        LEFT JOIN countries as cs on(cs.id=city.country_id)		
        LEFT JOIN employees AS mng ON (mng.id = emp.manager)        
        LEFT JOIN designations desg ON (desg.id = emp.designation_id)
        LEFT JOIN bands band ON (band.id = emp.band_id)
        LEFT JOIN countries tranCtry ON(tranCtry.id=emp.transferred_country_id)
        LEFT JOIN cities transCity ON(transCity.id=emp.transferred_city_id)
        LEFT JOIN employee_info_histories info ON (emp.id = info.employee_id AND info.id = (select MAX(id) from employee_info_histories where employee_id = emp.id AND field_changed = 'employment_status' AND (changed_from = 'e' || changed_to = 'e') AND changed_to NOT IN ('r','b','q','t')))       
        LEFT JOIN employee_info_histories as eih ON (eih.employee_id = emp.id AND eih.id = (select MAX(id) from employee_info_histories where employee_id = emp.id AND field_changed = 'employee_structure' AND changed_to = '29' AND status = 1))
        LEFT JOIN employees as parentmngr ON (parentmngr.id = eih.prev_manager)
        LEFT JOIN company_structures as parentSUBSBU ON (parentSUBSBU.id = eih.changed_from)
        LEFT JOIN company_structures as parentSBU ON (parentSBU.id = parentSUBSBU.parent_id)
        LEFT JOIN dtl_online_joining_formalities as ojf ON (ojf.employee_id = emp.id)
        LEFT JOIN dtl_exit_employee as dee ON (dee.employee_id = emp.id)
        LEFT JOIN dtl_ojf_pre_employer pr ON (pr.ojf_id=ojf.id)
        WHERE emp.structure_name = cmp.id 
        <dynamic prepend="AND">
            <isNotNull property="sbu">
                <isNotEqual property="sbu" compareValue="All">
                    cmp.name = #sbu#
                </isNotEqual>
            </isNotNull>
        </dynamic>
        <dynamic prepend="AND">
            <isNotNull property="subSbu">
                <isNotEmpty property="subSbu">
                    <isNotEqual property="subSbu" compareValue="All">
                        subs.id = #subSbu#
                    </isNotEqual>
                </isNotEmpty>
            </isNotNull>
        </dynamic>
        <dynamic prepend="AND">
            <isNotNull property="status">
                emp.employment_status in ($status$)
            </isNotNull>
        </dynamic>
        <dynamic prepend="AND">
            <isNotNull property="joinedStartDate">
                <isNotEmpty property="joinedStartDate">
                    emp.joined_date between #joinedStartDate# AND #joinedEndDate#
                </isNotEmpty>
            </isNotNull>
        </dynamic>
        group by emp.id order by emp.employee_number) AS temp
         
         
    </select>

    <select id="getEmpStatus"  resultClass="com.defiance.ideal.reports.dto.AssociateFilterDTO">
        SELECT a.configuration_key as id, a.configuration_value as name
        FROM configuration_values AS a
        INNER JOIN configuration_values AS b ON ( a.parent_id = b.id
        AND b.configuration_key = "employment_status_others")
    </select>
    
    <select id="getEmployeeCount"  resultClass="com.defiance.ideal.reports.dto.EmployeeBasicReportDTO">
        SELECT a.name as unit_name,
        SUM(a.billable) as emp_billable,
        SUM(a.dnb) as emp_dnb,
        SUM(a.ga) as emp_general,
        SUM(a.sa) as emp_sales,
        SUM(a.billable+a.dnb+a.ga+a.sa) AS emp_total 
        FROM
        (SELECT cs.name, CASE WHEN emp.billable = 'b' THEN COUNT(emp.id) ELSE 0 END AS billable,
        CASE WHEN emp.billable = 'n' THEN COUNT(emp.id) ELSE 0 END AS dnb,
        CASE WHEN emp.billable = 'm' THEN COUNT(emp.id) ELSE 0 END AS ga,
        CASE WHEN emp.billable = 's' THEN COUNT(emp.id) ELSE 0 END AS sa
        FROM employees AS emp
        LEFT JOIN company_structures AS cs ON cs.id = emp.structure_name
        LEFT JOIN configuration_values AS bill ON(bill.configuration_key = emp.billable AND bill.parent_id = 52 AND bill.configuration_key = 'b')
        LEFT JOIN configuration_values AS dnb ON(dnb.configuration_key = emp.billable AND dnb.parent_id = 52 AND dnb.configuration_key = 'n')
        LEFT JOIN configuration_values AS ga ON(ga.configuration_key = emp.billable AND ga.parent_id = 52 AND ga.configuration_key = 'm')
        LEFT JOIN configuration_values AS sa ON(sa.configuration_key = emp.billable AND sa.parent_id = 52 AND sa.configuration_key = 's')
        WHERE emp.employment_status NOT IN('r','t','b','q','o','y')
        GROUP BY emp.billable,emp.structure_name)AS a
        GROUP BY a.name
    </select>
    
    <select id="getEmployeeHeadCount"  resultClass="com.defiance.ideal.reports.dto.EmployeeBasicReportDTO">
        SELECT "Grand Total" as unit_name,
        SUM(a.billable) as emp_billable,
        SUM(a.dnb) as emp_dnb,
        SUM(a.ga) as emp_general,
        SUM(a.sa) as emp_sales,
        SUM(a.billable+a.dnb+a.ga+a.sa) AS emp_total 
        FROM
        (SELECT cs.name, CASE WHEN emp.billable = 'b' THEN COUNT(emp.id) ELSE 0 END AS billable,
        CASE WHEN emp.billable = 'n' THEN COUNT(emp.id) ELSE 0 END AS dnb,
        CASE WHEN emp.billable = 'm' THEN COUNT(emp.id) ELSE 0 END AS ga,
        CASE WHEN emp.billable = 's' THEN COUNT(emp.id) ELSE 0 END AS sa
        FROM employees AS emp
        LEFT JOIN company_structures AS cs ON cs.id = emp.structure_name
        LEFT JOIN configuration_values AS bill ON(bill.configuration_key = emp.billable AND bill.parent_id = 52 AND bill.configuration_key = 'b')
        LEFT JOIN configuration_values AS dnb ON(dnb.configuration_key = emp.billable AND dnb.parent_id = 52 AND dnb.configuration_key = 'n')
        LEFT JOIN configuration_values AS ga ON(ga.configuration_key = emp.billable AND ga.parent_id = 52 AND ga.configuration_key = 'm')
        LEFT JOIN configuration_values AS sa ON(sa.configuration_key = emp.billable AND sa.parent_id = 52 AND sa.configuration_key = 's')
        WHERE emp.employment_status NOT IN('r','t','b','q','o','y')
        GROUP BY emp.billable,emp.structure_name)AS a
    </select>
    
    <select id="getJoiner"  resultClass="com.defiance.ideal.reports.dto.EmployeeBasicReportDTO">
        SELECT 
        emp.employee_number AS empNumber, 
        CONCAT( emp.first_name," ", emp.last_name ) AS empName,          
        DATE_FORMAT(emp.joined_date, '%d-%m-%Y') AS joinDate,
        cmp.name AS sbu,
        subs.name AS subSbu,
        subpr.name AS subPractice,
        band.name AS bandName,
        CONCAT( mng.first_name," ", mng.last_name ) AS rmName,
        desg.designation AS designation,
        bill.configuration_value AS billable,        
        stat.configuration_value AS STATUS,
        cl.address_line1 AS currentLocation,
        cs.country AS currentWrkLocation
        FROM employees AS emp        
        LEFT JOIN company_structures cmp ON (emp.structure_name = cmp.id)
        LEFT JOIN company_structures subs ON (emp.structure_name_subgroup = subs.id)
        LEFT JOIN company_structures subpr ON (emp.structure_name_subpractice = subpr.id)
        LEFT JOIN company_locations AS loc ON (loc.id = emp.current_location_id)
        LEFT JOIN cities AS city ON (city.id = loc.city_id)
        LEFT JOIN countries AS cs ON(cs.id=city.country_id)		
        LEFT JOIN employees AS mng ON (mng.id = emp.manager)        
        LEFT JOIN designations desg ON (desg.id = emp.designation_id)
        LEFT JOIN bands band ON (band.id = emp.band_id)
        LEFT JOIN company_locations AS cl ON (cl.id=emp.current_location_id)             
        LEFT JOIN configuration_values AS bill ON(bill.configuration_key = emp.billable AND bill.parent_id = 52)
        LEFT JOIN configuration_values AS stat ON(stat.configuration_key = emp.employment_status AND stat.parent_id = 286)		  
        WHERE emp.structure_name = cmp.id AND emp.joined_date = DATE_ADD(CURDATE(), INTERVAL -1 DAY)
        GROUP BY emp.id ORDER BY emp.employee_number
    </select>
    
    <select id="getRelieved"  resultClass="com.defiance.ideal.reports.dto.EmployeeBasicReportDTO">
        SELECT 
        emp.employee_number AS empNumber, 
        CONCAT( emp.first_name," ", emp.last_name ) AS empName,          
        DATE_FORMAT(emp.joined_date, '%d-%m-%Y') AS joinDate,
        DATE_FORMAT(emp.released_date, '%d-%m-%Y') AS relieved,
        cmp.name AS sbu,
        subs.name AS subSbu,
        subpr.name AS subPractice,
        band.name AS bandName,
        CONCAT( mng.first_name," ", mng.last_name ) AS rmName,
        desg.designation AS designation,
        bill.configuration_value AS billable,        
        stat.configuration_value AS STATUS,
        cl.address_line1 AS currentLocation,
        cs.country AS currentWrkLocation
        FROM employees AS emp        
        LEFT JOIN company_structures cmp ON (emp.structure_name = cmp.id)
        LEFT JOIN company_structures subs ON (emp.structure_name_subgroup = subs.id)
        LEFT JOIN company_structures subpr ON (emp.structure_name_subpractice = subpr.id)
        LEFT JOIN company_locations AS loc ON (loc.id = emp.current_location_id)
        LEFT JOIN cities AS city ON (city.id = loc.city_id)
        LEFT JOIN countries AS cs ON(cs.id=city.country_id)		
        LEFT JOIN employees AS mng ON (mng.id = emp.manager)        
        LEFT JOIN designations desg ON (desg.id = emp.designation_id)
        LEFT JOIN bands band ON (band.id = emp.band_id)
        LEFT JOIN company_locations AS cl ON (cl.id=emp.current_location_id)             
        LEFT JOIN configuration_values AS bill ON(bill.configuration_key = emp.billable AND bill.parent_id = 52)
        LEFT JOIN configuration_values AS stat ON(stat.configuration_key = emp.employment_status AND stat.parent_id = 286)		  
        WHERE emp.structure_name = cmp.id AND emp.released_date = DATE_ADD(CURDATE(), INTERVAL -1 DAY)
        GROUP BY emp.id ORDER BY emp.employee_number
    </select>
    
    <select id="updateExperienceDetails" parameterClass="String" resultClass="String">
        <!--CALL PR_EMPLOYEE_MONTHLY_WORK_EXPERIENCE(NULL);-->
        Select 1;
    </select>
    
</sqlMap>